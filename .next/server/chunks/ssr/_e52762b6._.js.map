{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/tracysayre/Documents/Web%20Dev/Recipes/recipes-react-next-tsx/src/app/components/ui/recipes/RecipesByCategory.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/ui/recipes/RecipesByCategory.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/ui/recipes/RecipesByCategory.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuT,GACpV,qFACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/tracysayre/Documents/Web%20Dev/Recipes/recipes-react-next-tsx/src/app/components/ui/recipes/RecipesByCategory.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/ui/recipes/RecipesByCategory.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/ui/recipes/RecipesByCategory.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/tracysayre/Documents/Web%20Dev/Recipes/recipes-react-next-tsx/src/app/utils/utils.ts"],"sourcesContent":["/**\n * Capitalize the first letters of each word.\n * @constructor\n */\nexport const capFirstLetters = (string: string): string => {\n  return string.split(' ')\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(' ');\n};"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,MAAM,kBAAkB,CAAC;IAC9B,OAAO,OAAO,KAAK,CAAC,KACX,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AAChB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/tracysayre/Documents/Web%20Dev/Recipes/recipes-react-next-tsx/src/app/api/apis.ts"],"sourcesContent":["import { IRecipe } from \"../utils/types/types\";\n\nconst API_URL = \"http://localhost:3000/api\";\n\n/**\n * GetCategories\n * @constructor\n * @param {string} query - A query string for filtering.\n */\nexport async function getCategories(query?: string) {\n  const categories = await fetch(`${API_URL}/category`).then((res) => res.json() as Promise<string[]>)\n\n  if (query) {\n    return categories.filter((category) => \n      category.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  return categories;\n};\n\n/**\n * GetCategory\n * @constructor\n * @param {string} query - A query string for filtering.\n */\nexport async function getCategory(query: string) {\n  const categories = await getCategories();\n\n  return categories.find((category) => category === query);\n};\n\n\n/**\n * GetRecipes\n * @constructor\n * @param {string} query - A query string for filtering.\n */\nexport async function getRecipes(query?: string) {\n  const recipes = await fetch(`${API_URL}/recipe`).then((res) => res.json() as Promise<IRecipe[]>);\n\n  const sortedRecipes = recipes.sort((a,b) => {\n    const x = a.name.toLowerCase();\n    const y = b.name.toLowerCase();\n    if(x>y){return 1;}\n    if(x<y){return -1;}\n    return 0;\n  });\n  \n  if (query) {\n    return sortedRecipes.filter((recipe) => \n      recipe.name_slug.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n  \n  return sortedRecipes;\n};\n\n\n/**\n * getRecipesByCategory\n * @constructor\n * @param {string} category - A string for filtering.\n */\nexport async function getRecipesByCategory(category: string): Promise<IRecipe[]> {\n  const recipes: IRecipe[] = await getRecipes();\n\n  const filteredRecipes = recipes.filter((recipe) => {\n    return recipe.category.toLowerCase().includes(category.toLowerCase());\n  });\n\n  return filteredRecipes;\n};\n\n\n/**\n * getRecipeByNameSlug\n * @constructor\n * @param {string} query - A string for filtering.\n */\nexport async function getRecipeByNameSlug(query: string) {\n  const recipes = await getRecipes();\n\n  return recipes.find((recipe) => recipe.name_slug === query);\n};"],"names":[],"mappings":";;;;;;;AAEA,MAAM,UAAU;AAOT,eAAe,cAAc,KAAc;IAChD,MAAM,aAAa,MAAM,MAAM,GAAG,QAAQ,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;IAE5E,IAAI,OAAO;QACT,OAAO,WAAW,MAAM,CAAC,CAAC,WACxB,SAAS,WAAW,GAAG,QAAQ,CAAC,MAAM,WAAW;IAErD;IAEA,OAAO;AACT;AAOO,eAAe,YAAY,KAAa;IAC7C,MAAM,aAAa,MAAM;IAEzB,OAAO,WAAW,IAAI,CAAC,CAAC,WAAa,aAAa;AACpD;AAQO,eAAe,WAAW,KAAc;IAC7C,MAAM,UAAU,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;IAEvE,MAAM,gBAAgB,QAAQ,IAAI,CAAC,CAAC,GAAE;QACpC,MAAM,IAAI,EAAE,IAAI,CAAC,WAAW;QAC5B,MAAM,IAAI,EAAE,IAAI,CAAC,WAAW;QAC5B,IAAG,IAAE,GAAE;YAAC,OAAO;QAAE;QACjB,IAAG,IAAE,GAAE;YAAC,OAAO,CAAC;QAAE;QAClB,OAAO;IACT;IAEA,IAAI,OAAO;QACT,OAAO,cAAc,MAAM,CAAC,CAAC,SAC3B,OAAO,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,WAAW;IAE7D;IAEA,OAAO;AACT;AAQO,eAAe,qBAAqB,QAAgB;IACzD,MAAM,UAAqB,MAAM;IAEjC,MAAM,kBAAkB,QAAQ,MAAM,CAAC,CAAC;QACtC,OAAO,OAAO,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAS,WAAW;IACpE;IAEA,OAAO;AACT;AAQO,eAAe,oBAAoB,KAAa;IACrD,MAAM,UAAU,MAAM;IAEtB,OAAO,QAAQ,IAAI,CAAC,CAAC,SAAW,OAAO,SAAS,KAAK;AACvD","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/tracysayre/Documents/Web%20Dev/Recipes/recipes-react-next-tsx/src/app/%5Bcategory%5D/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation';\nimport { Suspense } from 'react';\nimport RecipesByCategory from '@/app/components/ui/recipes/RecipesByCategory';\nimport { capFirstLetters } from '@/app/utils/utils';\nimport { IRecipe } from '@/app/utils/types/types';\nimport { getCategories, getRecipesByCategory } from '@/app/api/apis';\n\nexport const dynamic = \"force-dynamic\";\n\nexport async function generateMetadata({ \n  params\n}: { \n  params: Promise<{ category: string }>\n}) {\n  const { category } = await params;\n  const categories = await getCategories();\n  \n  if (!categories.includes(category)) {\n    notFound();\n  }\n\n  return {\n    title: capFirstLetters(category)\n  };\n} \n\n/**\n * The Category Page.\n * @constructor\n */\nexport default async function CategoryPage({ params }: { params: Promise<{ category: string }> }) {\n  const { category } = await params;\n  const recipes: IRecipe[] = await getRecipesByCategory(category);\n  \n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <RecipesByCategory categories={[category]} recipes={recipes} />\n    </Suspense>\n  );\n}"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAEO,MAAM,UAAU;AAEhB,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM;IAC3B,MAAM,aAAa,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD;IAErC,IAAI,CAAC,WAAW,QAAQ,CAAC,WAAW;QAClC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,OAAO;QACL,OAAO,CAAA,GAAA,4HAAA,CAAA,kBAAe,AAAD,EAAE;IACzB;AACF;AAMe,eAAe,aAAa,EAAE,MAAM,EAA6C;IAC9F,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM;IAC3B,MAAM,UAAqB,MAAM,CAAA,GAAA,yHAAA,CAAA,uBAAoB,AAAD,EAAE;IAEtD,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;sBAAI;;;;;;kBACvB,cAAA,8OAAC,+JAAA,CAAA,UAAiB;YAAC,YAAY;gBAAC;aAAS;YAAE,SAAS;;;;;;;;;;;AAG1D","debugId":null}}]
}